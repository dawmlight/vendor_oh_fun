# cryptsetup
if CRYPTSETUP

cryptsetup_SOURCES =		\
	lib/utils_crypt.c	\
	lib/utils_loop.c	\
	lib/utils_io.c		\
	lib/utils_blkid.c	\
	src/utils_tools.c	\
	src/utils_password.c	\
	src/utils_luks2.c	\
	src/utils_blockdev.c	\
	src/cryptsetup.c	\
	src/cryptsetup.h

cryptsetup_LDADD = $(LDADD)	\
	libcryptsetup.la	\
	@POPT_LIBS@		\
	@PWQUALITY_LIBS@	\
	@PASSWDQC_LIBS@		\
	@UUID_LIBS@		\
	@BLKID_LIBS@

sbin_PROGRAMS += cryptsetup

if STATIC_TOOLS
sbin_PROGRAMS += cryptsetup.static
cryptsetup_static_SOURCES = $(cryptsetup_SOURCES)
cryptsetup_static_LDFLAGS = $(AM_LDFLAGS) -all-static
cryptsetup_static_LDADD =	\
	$(cryptsetup_LDADD)	\
	@CRYPTO_STATIC_LIBS@	\
	@PWQUALITY_STATIC_LIBS@	\
	@DEVMAPPER_STATIC_LIBS@
endif
endif

# veritysetup
if VERITYSETUP

veritysetup_SOURCES =		\
	lib/utils_crypt.c	\
	lib/utils_loop.c	\
	lib/utils_io.c		\
	lib/utils_blkid.c	\
	src/utils_tools.c	\
	src/veritysetup.c	\
	src/cryptsetup.h

veritysetup_LDADD = $(LDADD)	\
	libcryptsetup.la	\
	@POPT_LIBS@		\
	@BLKID_LIBS@

sbin_PROGRAMS += veritysetup

if STATIC_TOOLS
sbin_PROGRAMS += veritysetup.static
veritysetup_static_SOURCES = $(veritysetup_SOURCES)
veritysetup_static_LDFLAGS = $(AM_LDFLAGS) -all-static
veritysetup_static_LDADD =	\
	$(veritysetup_LDADD)	\
	@CRYPTO_STATIC_LIBS@	\
	@DEVMAPPER_STATIC_LIBS@	\
	@UUID_LIBS@
endif
endif

# integritysetup
if INTEGRITYSETUP

integritysetup_SOURCES =	\
	lib/utils_crypt.c	\
	lib/utils_loop.c	\
	lib/utils_io.c		\
	lib/utils_blkid.c	\
	src/utils_tools.c	\
	src/integritysetup.c	\
	src/cryptsetup.h

integritysetup_LDADD = $(LDADD)	\
	libcryptsetup.la	\
	@POPT_LIBS@		\
	@UUID_LIBS@		\
	@BLKID_LIBS@

sbin_PROGRAMS += integritysetup

if STATIC_TOOLS
sbin_PROGRAMS += integritysetup.static
integritysetup_static_SOURCES = $(integritysetup_SOURCES)
integritysetup_static_LDFLAGS = $(AM_LDFLAGS) -all-static
integritysetup_static_LDADD =	\
	$(integritysetup_LDADD)	\
	@CRYPTO_STATIC_LIBS@	\
	@DEVMAPPER_STATIC_LIBS@	\
	@UUID_LIBS@
endif
endif

# reencrypt
if REENCRYPT
cryptsetup_reencrypt_SOURCES =		\
	lib/utils_crypt.c		\
	lib/utils_io.c			\
	lib/utils_blkid.c		\
	src/utils_tools.c		\
	lib/utils_loop.c		\
	src/utils_password.c		\
	src/cryptsetup_reencrypt.c	\
	src/cryptsetup.h

cryptsetup_reencrypt_LDADD = $(LDADD)	\
	libcryptsetup.la		\
	@POPT_LIBS@			\
	@PWQUALITY_LIBS@		\
	@PASSWDQC_LIBS@			\
	@UUID_LIBS@			\
	@BLKID_LIBS@

sbin_PROGRAMS += cryptsetup-reencrypt

if STATIC_TOOLS
sbin_PROGRAMS += cryptsetup-reencrypt.static
cryptsetup_reencrypt_static_SOURCES = $(cryptsetup_reencrypt_SOURCES)
cryptsetup_reencrypt_static_LDFLAGS = $(AM_LDFLAGS) -all-static
cryptsetup_reencrypt_static_LDADD =	\
	$(cryptsetup_reencrypt_LDADD)	\
	@CRYPTO_STATIC_LIBS@		\
	@PWQUALITY_STATIC_LIBS@		\
	@DEVMAPPER_STATIC_LIBS@
endif
endif
