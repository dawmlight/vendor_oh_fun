# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/lite/config/component/lite_component.gni")
import("//build/lite/config/test.gni")

unittest("ai_test_function") {
  output_extension = "bin"
  output_dir = "$root_out_dir/test/unittest/ai"
  ldflags = [ "-lstdc++" ]
  include_dirs = [
    "//base/hiviewdfx/hilog_lite/interfaces/native/kits/hilog",
    "//foundation/ai/engine/interfaces",
    "//foundation/ai/engine/services/client",
    "//foundation/ai/engine/services/common",
    "//foundation/ai/engine/services/server",
    "//foundation/ai/engine/test/utils",
    "//foundation/communication/ipc_lite/frameworks/liteipc/include",
    "//foundation/communication/ipc_lite/interfaces/kits",
    "//foundation/distributedschedule/samgr_lite/interfaces/innerkits/registry",
    "//foundation/distributedschedule/samgr_lite/interfaces/innerkits/samgr",
    "//foundation/distributedschedule/samgr_lite/interfaces/kits/registry",
    "//foundation/distributedschedule/samgr_lite/interfaces/kits/samgr",
    "//third_party/bounds_checking_function/include",
    "//utils/native/lite/include",
  ]
  deps = [
    "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
    "//foundation/ai/engine/services/client:client",
    "//foundation/ai/engine/services/common/platform/dl_operation:dlOperation",
    "//foundation/ai/engine/services/common/platform/lock:lock",
    "//foundation/ai/engine/services/common/protocol/data_channel:data_channel",
    "//foundation/ai/engine/services/server/plugin_manager:plugin_manager",
    "//foundation/ai/engine/test/sample:sample_plugin_1",
    "//foundation/ai/engine/test/sample:sample_plugin_2",
    "//foundation/distributedschedule/samgr_lite/samgr:samgr",
  ]
  sources = [
    "async_process/async_process_function_test.cpp",
    "destroy/destroy_function_test.cpp",
    "init/init_function_test.cpp",
    "plugin_manager/plugin_manager_test.cpp",
    "prepare/prepare_function_test.cpp",
    "release/release_function_test.cpp",
    "set_get_option/option_function_test.cpp",
    "sync_process/sync_process_function_test.cpp",
  ]
}

group("function") {
  deps = [
    ":ai_test_function",
    "death_callback:testDeathCallback",
  ]
}
