# Copyright (c) 2013-2019 Huawei Technologies Co., Ltd. All rights reserved.
# Copyright (c) 2020-2021 Huawei Device Co., Ltd. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification,
# are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice, this list of
#    conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright notice, this list
#    of conditions and the following disclaimer in the documentation and/or other materials
#    provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its contributors may be used
#    to endorse or promote products derived from this software without specific prior written
#    permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import("//build/lite/config/component/lite_component.gni")
import("//build/lite/config/subsystem/lite_subsystem.gni")

lite_component("liteos_a_drivers") {
  features = []

  if (LOSCFG_DRIVERS_HIEDMAC) {
    features += [ "platform/hiedmac:drivers_hiedmac" ]
  }

  if (LOSCFG_DRIVERS_HIETH_SF) {
    features += [ "hieth-sf:drivers_hieth-sf" ]
  }

  if (LOSCFG_DRIVERS_MEM) {
    features += [ "mem:drivers_mem" ]
  }

  if (LOSCFG_DRIVERS_MMC) {
    features += [ "storage/mmc:drivers_mmc" ]
  }

  if (LOSCFG_DRIVERS_MTD) {
    features += [ "storage/mtd/common:drivers_mtd_common" ]

    if (LOSCFG_DRIVERS_MTD_NAND) {
      features += [ "storage/mtd/nand:drivers_mtd_nand" ]
    }

    if (LOSCFG_DRIVERS_MTD_SPI_NOR) {
      features += [ "storage/mtd/spi_nor:drivers_mtd_spinor" ]
    }
  }

  if (LOSCFG_DRIVERS_RANDOM) {
    features += [ "platform/random:drivers_random" ]
  }

  if (LOSCFG_DRIVERS_PIPE) {
    features += [ "platform/pipe:drivers_pipe" ]
  }

  if (LOSCFG_DRIVERS_VIDEO) {
    features += [ "video:drivers_video" ]
  }

  if (LOSCFG_DRIVERS_HIEVENT) {
    features += [ "hievent:drivers_hievent" ]
  }
}

lite_subsystem("board") {
  subsystem_components = [
    ":liteos_a_drivers",
    "//kernel/liteos_a/platform:platform_bsp",
  ]
}
