/*
 * Copyright (c) 2020 Nanjing Xiaoxiongpai Intelligent Technology Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

    // FA 设备连接华为云核心代码
    commandLightImgBtn.setClickedListener(component -> {
    	SDKIoTDAClient sdkIoTDAClient = SDKIoTDAClient.getInstance();
        if (!waterFlowerStatue) {
            LinkedHashMap<String, Object> motorControlParas = new LinkedHashMap<>();
            motorControlParas.put("Motor", "ON");
            chosenCommandType = stopeReta;
            // FA设备连接华为云
            sdkIoTDAClient.CreateCommand(device[0], "AutoWater", "AutoWater_Control_Pump",
                    motorControlParas, new SDKCallBack<CreateCommandResponse>() {
                @Override
                public void onResponse(CreateCommandResponse response) {

                }

                @Override
                public void onFailure(int code, String errmsg) {
                    Utils.gotoLogin(code, abilitySlice);
                }
            });

            commandLightImgBtn.setPixelMap(ResourceTable.Media_btn_on);
            waterFlowerHintText.setText(showCloseText);
            waterFlowerHintText.setTextColor(ColorResources.COlOR_Btn_Open);
            waterFlowerStatue = true;
        }
    });



